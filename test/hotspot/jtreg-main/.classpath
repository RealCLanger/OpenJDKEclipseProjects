<?xml version="1.0" encoding="UTF-8"?>
<classpath>
	<classpathentry excluding="applications/scimark/**|
	|compiler/aot/jdk.tools.jaotc.test/**|
	|compiler/aot/scripts/**|
	|compiler/arraycopy/TestCloneAccessStressGCM.java|
	|compiler/arraycopy/ACasLoadsStoresBadMem*|
	|compiler/arraycopy/TestACSameSrcDst*|
	|compiler/arraycopy/TestArrayCopyUNCBadMem*|
	|compiler/arraycopy/TestEliminatedCloneBadMemEdge*|
	|compiler/arraycopy/TestInitializingACLoadWithBadMem*|
	|compiler/arraycopy/TestLoadBypassACWithWrongMem*|
	|compiler/c1/Test8271202*|
	|compiler/c1/TestArrayCopyToFromObject*|
	|compiler/c1/TestC1PhiPlacementPathologyMain*|
	|compiler/c1/TestGotoIfMain*|
	|compiler/c1/TestLinearScanOrder*|
	|compiler/c1/TestTooManyVirtualRegistersMain*|
	|compiler/c1/TestUnresolvedFieldMain*|
	|compiler/c1/UnsafeVolatileGuardTest*|
	|compiler/c1/VolatileGuardTest*|
	|compiler/c2/aarch64/ConvI2LWideningAssertTooStrong.java|
	|compiler/c2/SubsumingLoadsCauseFlagSpill*|
	|compiler/c2/Test6852078*|
	|compiler/c2/TestRenumberLiveNodesInfiniteLoop.java|
	|compiler/c2/TestReplacedNodesOSR*|
	|compiler/conversions/**|
	|compiler/dependencies/MonomorphicObjectCall/**|
	|compiler/escapeAnalysis/TestCopyOfBrokenAntiDependency*|
	|compiler/escapeAnalysis/TestValAtSafepointOverflowsInt*|
	|compiler/exceptions/TestC1ExceptionHandlersSameBCI*|
	|compiler/floatingpoint/TestFMA*|
	|compiler/gcbarriers/EqvUncastStepOverBarrier.java|
	|compiler/gcbarriers/TestMembarDependencies.java|
	|compiler/graalunit/com.oracle.mxtool.junit/**|
	|compiler/inlining/StringConcatInfiniteLoop.java|
	|compiler/integerArithmetic/MultiplyByConstantLongMax.java|
	|compiler/integerArithmetic/MultiplyByIntegerMinHang.java|
	|compiler/intrinsics/string/TestHasNegatives.java|
	|compiler/intrinsics/string/TestStringUTF16IntrinsicRangeChecks.java|
	|compiler/intrinsics/string/TestStringIntrinsicRangeChecks.java|
	|compiler/intrinsics/unsafe/ByteBufferTest.java|
	|compiler/intrinsics/unsafe/DirectByteBufferTest.java|
	|compiler/intrinsics/unsafe/HeapByteBufferTest.java|
	|compiler/intrinsics/unsafe/TestCAEAntiDep.java|
	|compiler/jvmci/**|
	|compiler/jsr292/**|
	|compiler/linkage/TestLinkageErrorInGenerateOopMap.java|
	|compiler/locks/**|
	|compiler/loopopts/CountedLoopPeelingProfilePredicates.java|
	|compiler/loopopts/IterationSplitPredicateInconsistency.java|
	|compiler/loopopts/LoadVectorFromStableArray.java|
	|compiler/loopopts/LoopRotateBadNodeBudget.java|
	|compiler/loopopts/LoopUnrollBadNodeBudget.java|
	|compiler/loopopts/LoopUnswitchingBadNodeBudget.java|
	|compiler/loopopts/PeelingZeroTripCount.java|
	|compiler/loopopts/SplitIfSharedFastLockBehindCastPP.java|
	|compiler/loopopts/StoreMovedBeforeInfiniteLoop.java|
	|compiler/loopopts/Test8211698.java|
	|compiler/loopopts/TestBadControlLoopLimitCheck.java|
	|compiler/loopopts/TestCMovSplitThruPhi.java|
	|compiler/loopopts/TestCounted*.java|
	|compiler/loopopts/TestDeadCountedLoop.java|
	|compiler/loopopts/TestIdomAfterLoopUnswitching.java|
	|compiler/loopopts/TestImpossibleIV.java|
	|compiler/loopopts/TestInfiniteLoopCCP.java|
	|compiler/loopopts/TestInfiniteLoopNotInnerMost.java|
	|compiler/loopopts/TestLimitLoadBelowLoopLimitCheck.java|
	|compiler/loopopts/TestLoopPredicateDep.java|
	|compiler/loopopts/TestLoopUnswitchingLostCastDependency.java|
	|compiler/loopopts/TestMisalignedUnsafeAccess.java|
	|compiler/loopopts/TestNestedIrreducibleLoopsMain.java|
	|compiler/loopopts/TestRCEAfterUnrolling.java|
	|compiler/loopopts/TestSplitIfPinnedCMove.java|
	|compiler/loopopts/TestSplitThruPhiDivMod.java|
	|compiler/loopopts/TestStrangeControl.java|
	|compiler/loopopts/TestStripMinedBackToBackIfs.java|
	|compiler/loopstripmining/**|
	|compiler/parsing/**|
	|compiler/patches/**|
	|compiler/rangechecks/RangeCheckEliminationScaleNotOne.java|
	|compiler/rangechecks/TestRangeCheckExceptionHandlerLoopMain.java|
	|compiler/regalloc/TestGCMRecalcPressureNodes.java|
	|compiler/regalloc/VolatileLoadMemBarsOnlyUses.java|
	|compiler/types/TestArrayMeetNotSymmetrical.java|
	|compiler/uncommontrap/FoldedIfNonDomMidIf.java|
	|compiler/uncommontrap/UncommonTrapLeak.java|
	|compiler/unsafe/CASandCAEwithNegExpected.java|
	|compiler/unsafe/MaybeOffHeapUnsafeAccessToNewObject.java|
	|compiler/unsafe/MismatchedUnsafeLoadFromNewObject.java|
	|compiler/unsafe/TestLoopUnswitching.java|
	|compiler/unsafe/TestMaybeNullUnsafeAccess.java|
	|compiler/unsafe/TestMisalignedUnsafeAccess.java|
	|compiler/unsafe/TestSplitIf.java|
	|compiler/unsafe/TestUnsafeStaticFieldAccess.java|
	|compiler/unsafe/UnsafeGetConstantField*|
	|compiler/unsafe/UnsafeOffHeapBooleanTest.java|
	|compiler/unsafe/UnsafeOnHeapBooleanTest.java|
	|compiler/unsafe/UnsafeSmallOffsetBooleanAccessTest.java|
	|compiler/vectorization/TestUnexpectedLoadOrdering.java|
	|compiler/vectorization/TestVectorsNotSavedAtSafepoint.java|
	|gc/**|
	|gtest/**|
	|native_sanity/**|
	|runtime/**|
	|sanity/**|
	|serviceability/**|
	|testlibrary*/**|
	|vmTestBase/**" including="applications/**|compiler/**" kind="src" path="src-test.hotspot.jtreg"/>
	<classpathentry excluding="cacheObject/**|condy/**|customLoader/**|javaldr/**|jigsaw/**|jvmti/**|redefineClass/**|sharedStrings/**|test-classes/**|MultiProcessSharing.java" kind="src" path="src-test.hotspot.jtreg/runtime/appcds"/>
	<classpathentry excluding="test-classes/**" kind="src" path="src-test.hotspot.jtreg/runtime/LoadClass"/>
	<classpathentry combineaccessrules="false" kind="src" path="/java.base">
		<attributes>
			<attribute name="module" value="true"/>
			<attribute name="add-exports" value="java.base/jdk.internal.misc=ALL-UNNAMED:java.base/jdk.internal.vm.annotation=ALL-UNNAMED:java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED:java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED:java.base/sun.nio.cs=ALL-UNNAMED"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/java.management">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/java.compiler">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/java.instrument">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/java.rmi">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/java.desktop">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/jdk.attach">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/jdk.jartool">
		<attributes>
			<attribute name="module" value="true"/>
			<attribute name="add-exports" value="jdk.jartool/sun.tools.jar=ALL-UNNAMED"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/jdk.jfr">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/jdk.management">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/jdk.unsupported">
		<attributes>
			<attribute name="module" value="true"/>
		</attributes>
	</classpathentry>
	<classpathentry combineaccessrules="false" kind="src" path="/jdk.internal.vm.ci">
		<attributes>
			<attribute name="module" value="true"/>
			<attribute name="add-exports" value="jdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED:jdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED:jdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED:jdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED:jdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED:jdk.internal.vm.ci/jdk.vm.ci.common=ALL-UNNAMED"/>
		</attributes>
	</classpathentry>
	<classpathentry kind="src" path="src-test.hotspot.jtreg/containers/docker"/>
	<classpathentry combineaccessrules="false" kind="src" path="/test.lib"/>
	<classpathentry kind="lib" path="testng.jar"/>
	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/5"/>
	<classpathentry kind="output" path="output"/>
</classpath>
